name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  gitleaks-scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  trivy-scan:
    name: trivy-scan
    runs-on: ubuntu-latest
    needs: gitleaks-scan
    permissions:  # ðŸ‘ˆ Add this block
      security-events: write  # Required for SARIF upload
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
      - name: Run Trivy and generate HTML report
        run: |
          wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
          sudo cp html.tpl /usr/bin/html.tpl
          trivy fs --security-checks vuln,secret --format template --template "@/usr/bin/html.tpl" --output trivy-report.html .    
      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-security-report
          path: trivy-report.html

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'



  sonarqube:
    name: Build and analyze
    runs-on: ubuntu-latest
    needs: gitleaks-scan

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.
    - name: Build with Maven
      run: mvn clean install -f pom.xml
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        projectBaseDir: .
        args: >
          -Dsonar.organization=my-org
          -Dsonar.projectKey=my-Java-web-app
          -Dsonar.java.binaries=target/classes
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


  package-and-run:
    needs: sonarqube
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Package with Maven
      run: | 
        mvn package
        pm2 restart spring-boot-app
    - name: Test Docker Access
      run: docker ps
    - name: Nexus Repo Publish
      uses: sonatype-nexus-community/nexus-repo-github-action@master
      with:
        serverUrl: http://ip172-18-0-62-cvp5fkiim2rg00bb0brg-8081.direct.labs.play-with-docker.com
        username: admin
        password: ${{ secrets.NEXUS_PASSWORD }}
        format: maven2
        repository: maven-releases
        coordinates: groupId=com.example artifactId=app version=4.0.1-${{ github.run_number }}
        assets: extension=jar
        filename: target/*.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: tejasdurge55/java-maven-webapp:latest
        file: ./Dockerfile
    - name: Remove existing Docker container if present
      run: |
        if [ "$(docker ps -a -q -f name=java-tejas-webapp)" ]; then
          echo "Removing existing container java-tejas-webapp..."
          docker rm -f java-tejas-webapp
        else
          echo "No existing container found."
        fi

    - name: Remove existing Docker image if present
      run: |
        if [ "$(docker images -q tejasdurge55/java-maven-webapp:latest)" ]; then
          echo "Removing existing image tejasdurge55/java-maven-webapp:latest..."
          docker rmi -f tejasdurge55/java-maven-webapp:latest
        else
          echo "No existing image found."
        fi

    - name: Pull and run the new container
      run: |
        docker run -d -p 9000:8080 --name java-tejas-webapp tejasdurge55/java-maven-webapp:latest
    

