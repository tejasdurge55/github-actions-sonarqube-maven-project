name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven
  #   - name: Compile with Maven
  #     run: mvn compile

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'
  #       cache: maven    
  #   - name: Run tess
  #     run: mvn test

  # scan:
  #   name: gitleaks
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: gitleaks/gitleaks-action@v2
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

  # trivy-scan:
  #   name: trivy-scan
  #   runs-on: ubuntu-latest
  #   permissions:  # ðŸ‘ˆ Add this block
  #     security-events: write  # Required for SARIF upload
  #     actions: read
  #     contents: read
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Run Trivy vulnerability scanner in repo mode
  #       uses: aquasecurity/trivy-action@0.28.0
  #       with:
  #         scan-type: 'fs'
  #         ignore-unfixed: true
  #         format: 'sarif'
  #         output: 'trivy-results.sarif'
  #         severity: 'CRITICAL'
  #     - name: Run Trivy and generate HTML report
  #       run: |
  #         wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
  #         sudo cp html.tpl /usr/bin/html.tpl
  #         trivy fs --security-checks vuln,secret --format template --template "@/usr/bin/html.tpl" --output trivy-report.html .    
  #     - name: Upload HTML Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: trivy-security-report
  #         path: trivy-report.html

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v3
  #       with:
  #         sarif_file: 'trivy-results.sarif'

  # sonarqube:
  #   name: Build and analyze
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 17
  #         distribution: 'zulu' # Alternative distribution options are available.
  #     - name: Cache SonarQube packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.sonar/cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: ${{ runner.os }}-sonar
  #     - name: Cache Maven packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ~/.m2
  #         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #         restore-keys: ${{ runner.os }}-m2
  #     - name: Build and analyze
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: https://babd2ed4-aeff-4eec-bbe8-10644747820e-10-244-3-23-9000.papa.r.killercoda.com
  #       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=GC-Bank -Dsonar.projectName='GC-Bank'



  sonarqube:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.
    - name: Build with Maven
      run: mvn clean install -f pom.xml
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      with:
        projectBaseDir: .
        args: >
          -Dsonar.organization=my-org
          -Dsonar.projectKey=my-Java-web-app
          -Dsonar.java.binaries=target/classes
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: https://babd2ed4-aeff-4eec-bbe8-10644747820e-10-244-3-23-9000.papa.r.killercoda.com
